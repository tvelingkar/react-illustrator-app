name: Pre-Deploy Workflow

on:
  pull_request:
    branches: develop
    types: [assigned, opened, synchronize, reopened]

jobs:
  build_test:
    name: Build and Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.18.3]

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Set up pre-requisites
      run: npm install -g npm-check-updates

    - name: Run audit and check package versions
      run: |
        npx audit-ci -m
        ncu

    - name: Install dependencies
      run: yarn --frozen-lockfile

    - name: Run linters
      run: |
        yarn format:check
        yarn lint

    - name: Run Sonar scan
      run: |
        yarn test
        sudo keytool -import -alias intermediate -file ./node_modules/@commerce-platform/scripts/certs/dbg-sonarqubertpraleighibmcom.crt -keystore $JAVA_HOME/lib/security/cacerts -storepass changeit -noprompt
        curl $SONAR_URL --fail --insecure; if [ $? -eq 0 ] && [ "$TRAVIS_PULL_REQUEST" = "false" ]; then sonar-scanner -Dsonar.host.url=${SONAR_URL} -Djavax.net.ssl.trustStore=$JAVA_HOME/lib/security/cacerts -Djavax.net.ssl.trustStorePassword=changeit; fi

    - name: Run Static App Scan
      run: sh ./bin/SAST.sh
      env: 
        APPSCAN_APPNAME: "Static-Auth0-Sample"
        APPSCAN_TOKEN: "Test"
        APPSCAN_SECRET: "Test"
        APPSCAN_WAIT: true
        APPSCAN_WAIT_TIMEOUT: 600
        APPSCAN_NEW_ISSUE_LIMIT: 5
        APPSCAN_HIGH_ISSUE_LIMIT: 1
        APPSCAN_MED_ISSUE_LIMIT: 2
        APPSCAN_LOW_ISSUE_LIMIT: 3
        APPSCAN_TOTAL_ISSUE_LIMIT: 5
        APPSCAN_BOX_EMAIL: "Tushar.Velingkar1@ibm.com"
        APPSCAN_SLACK_HOOK: "Test"

    - name: Run build
      run: yarn build
      env:
        CI: true

    - name: Run test
      run: yarn test